name: Build and Test iOS App from anytype-swift

permissions:
  contents: 'write'

on:
  workflow_dispatch:

jobs:
  main:
    runs-on: macos-latest
    timeout-minutes: 50

    env:
      SWIFT_REPO: anyproto/anytype-swift
      SWIFT_REPO_BRANCH: main
      APP_WORKSPACE: Anytype.xcworkspace
      APP_SCHEME: Anytype
      BUILD_CONFIGURATION: Debug
      SDK: iphonesimulator
      DERIVED_DATA_PATH: build
      DESTINATION_FOLDER: ./cmd
      SIMULATOR_NAME: "iPhone 14"
      APP_NAME: Anytype

    steps:
      - name: Checkout anytype-test Repository
        uses: actions/checkout@v3

      - name: Checkout anytype-swift Repository
        uses: actions/checkout@v3
        with:
          repository: ${{ env.SWIFT_REPO }}
          ref: ${{ env.SWIFT_REPO_BRANCH }}
          path: anytype-swift
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

      - name: Install SSH key for access to repositories
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_ACCESS_KEY }}

      - name: Update git config
        run: |
          git config --global url."git@github.com:".insteadOf "https://github.com/"

      - name: Prepare dependencies
        run: |
          cd anytype-swift
          # Run your custom preparation scripts here
          # For example:
          # ./scripts/prepare-deps.sh

      - name: Setup Xcode
        uses: maxim-lobanov/setup-xcode@v1.6.0
        with:
          xcode-version: '16.0'

      - name: Download Middleware
        run: |
          cd anytype-swift
          make setup-middle-ci
        env:
          MIDDLEWARE_TOKEN: ${{ secrets.MIDDLEWARE_TOKEN }}

      - name: Install CocoaPods
        run: |
          sudo gem install cocoapods
          cd anytype-swift
          pod install

      - name: Install npm Dependencies
        run: npm install

      - name: Build the iOS App
        run: |
          cd anytype-swift
          xcodebuild -workspace "$APP_WORKSPACE" \
                     -scheme "$APP_SCHEME" \
                     -configuration "$BUILD_CONFIGURATION" \
                     -sdk "$SDK" \
                     -destination 'platform=iOS Simulator,name='"$SIMULATOR_NAME" \
                     -derivedDataPath "$DERIVED_DATA_PATH" \
                     CODE_SIGNING_ALLOWED=NO

      - name: Copy .app File to Destination Folder
        run: |
          mkdir -p "$DESTINATION_FOLDER"
          cp -R "anytype-swift/$DERIVED_DATA_PATH/Build/Products/$BUILD_CONFIGURATION-$SDK/$APP_NAME.app" "$DESTINATION_FOLDER/"

      - name: Run npm iOS Tests
        env:
          APP_PATH: "$DESTINATION_FOLDER/$APP_NAME.app"
        run: npm run test:ios
